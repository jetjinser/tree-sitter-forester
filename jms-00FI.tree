\title{nix support}
\parent{jms-00CW}
\taxon{feature}
\author{kentookura}
\date{2023-11-22}

\p{[[jms-00CW]] comes with a [nix flake](https://nixos.wiki/wiki/Flakes)
for easy integration with nix-based systems. Users of nix can try
forester without installing the ocaml toolchain by running
\code{nix run sourcehut:~jonsterling/ocaml-forester}.}

\p{To create a development shell with \code{forester} and LaTeX dependencies,
create a file named \code{flake.nix} with the following content:}

\pre{\startverb
{
 inputs = {
   forester = {
     url = "sourcehut:~jonsterling/ocaml-forester";
   };
   flake-utils.url = "github:numtide/flake-utils";
 };
 outputs =
   { self
   , flake-utils
   , nixpkgs
   , forester
   }:
   flake-utils.lib.eachDefaultSystem
     (system:
     let
       pkgs = import nixpkgs { inherit system; };
       legacyPackages = import forester.legacyPackages.${system};
     in
     {
       devShell =
         pkgs.mkShell {
           buildInputs = with pkgs; [
             forester.packages.${system}.default
             texlive.combined.scheme-full
             fswatch
           ];
         };
     });
}\stopverb}

\p{and run \code{nix develop}.}

\p{The [default template](https://git.sr.ht/~jonsterling/forest-template) now ships with a flake and an [envrc](https://direnv.net). If you created your forest using this template and would like to use direnv, simply copy \code{flake.nix} and \code{.envrc} to your forest base directory.}
